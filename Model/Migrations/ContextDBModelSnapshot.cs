// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Role", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_id = 1,
                            Role_name = "admin"
                        },
                        new
                        {
                            Role_id = 2,
                            Role_name = "user"
                        });
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Password")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("User_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            User_id = 1,
                            Password = 123,
                            Phone = 0,
                            User_name = "Basma"
                        },
                        new
                        {
                            User_id = 2,
                            Password = 456,
                            Phone = 0,
                            User_name = "Eman"
                        },
                        new
                        {
                            User_id = 3,
                            Password = 789,
                            Phone = 0,
                            User_name = "admin"
                        });
                });

            modelBuilder.Entity("Model.User_Role", b =>
                {
                    b.Property<int>("UR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Role_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("UR_ID");

                    b.HasIndex("Role_id");

                    b.HasIndex("User_id");

                    b.ToTable("User_Roles");

                    b.HasData(
                        new
                        {
                            UR_ID = 1,
                            Role_id = 1,
                            User_id = 2
                        },
                        new
                        {
                            UR_ID = 2,
                            Role_id = 2,
                            User_id = 1
                        },
                        new
                        {
                            UR_ID = 3,
                            Role_id = 1,
                            User_id = 3
                        });
                });

            modelBuilder.Entity("Model.User_Role", b =>
                {
                    b.HasOne("Model.Role", "role")
                        .WithMany("user_Roles")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.User", "user")
                        .WithMany("user_Roles")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Model.Role", b =>
                {
                    b.Navigation("user_Roles");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Navigation("user_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
